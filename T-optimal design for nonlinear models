rm(list=ls())
library(numDeriv)
library(quadprog)
library(Matrix)
#---------------------------------------------------------------------
xstart=c(0,4)
grid=seq(0,30,length=200)
n11=length(grid)

theta1=1
theta2.start=0.5
maxiter=2000

xstartnew=xstart
n=length(xstartnew)
wstart=c(rep((1/n),n))
#---------------------------------------------------------------------
for(k in 1:maxiter){
plot(k,xlim=c(k-1,k+1))
text(x=k+1,y=k,k,col="red")

#---------------------------------------------------------------------
#                               THETA.HAT
#---------------------------------------------------------------------
Tp.theta=function(par){

eta1=exp(-theta1*xstartnew)
eta2=1/(1+(par[1]*xstartnew))
eta3=wstart*((eta1-eta2)^2)
sum(eta3)
}
theta2.hat=optim(theta2.start,Tp.theta,lower=0,upper=Inf,method="L-BFGS-B")$par
 
theta2.start=theta2.hat

#---------------------------------------------------------------------
#                                X.HAT
#---------------------------------------------------------------------
psi.had=c()
for(kk1 in 1:n11){
psi.hess=function(xhes){

eta11=exp(-theta1*xhes)
eta22=1/(1+(theta2.hat*xhes))

eta33=((eta11-eta22)^2)
}
psi.had[kk1]=psi.hess(grid[kk1])
}
mm=which.max(psi.had)
x.hat=grid[mm]
xstartnew=c(xstartnew,x.hat)
alpha=1/(k+1)
wstart=c(((1-alpha)*wstart),alpha)
n=length(xstartnew)
}
#---------------------------------------------------------------------
design=cbind(xstartnew,wstart)
design.sort=sort(unique(design[,1]))
result=matrix(0,length(design.sort),2)
for(i in 1: length(design.sort)){
mm1=which(design[,1]==design.sort[i])
result[i,1]=design.sort[i]
result[i,2]=sum(design[mm1,2])
}

result



